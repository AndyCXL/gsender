.control-area {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;

    position: absolute;
    top: 60px;
    right: 20px;
    left: 20px;
}

.camera-img {
    width: 50px;
    padding: 5px;
    border-radius: 10px;

    &:focus {
        outline: none;
    }
}

.camera-control-active {
    background-color: darken(#53d277, 30%);
}

.camera-control {
    display: grid;
    grid-template-columns: 4rem 4rem 4rem;
    grid-gap: 5px;
    align-self: flex-start;
    border-radius: 10px;
}

.machine-info {
    width: 100%;
    max-width: 160px;
    p {
        text-align: right;
        color: white;
        word-break: break-all;
        font-size: clamp(0.8rem, 1vw, 1.6rem);
    }
}

.machine-status-message {
    font-size: 2rem;
    margin-top: 15px;
    align-self: flex-start;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 10vh
    max-height: 70px
    border-radius: 5px;
    width: 100%;
    max-width: 255px;
}

.machine {
    status-mixin(bgColor, textColor){
        @extend .machine-status-message;
        
        background-color: rgba(bgColor, 0.6);
        color: rgba(textColor, 0.8);
    }

    &-Disconnected {
        bgColor = grey;
        color = white;
        status-mixin(bgColor, color)
    }

    &-Idle {
        bgColor = white;
        color = black;
        status-mixin(bgColor, color)
    }

    &-Alarm {
        bgColor = rgb(255, 0, 0);
        color = rgb(255, 255, 255);
        status-mixin(bgColor, color)
        cursor: pointer;

        &:hover {
            background-color: lighten(bgColor, 5%);
            color: black;
        }
    }

    &-Run {
        bgColor = rgb(0, 255, 0);
        color = rgb(255, 255, 255);
        status-mixin(bgColor, color)
    }

    &-Hold {
        bgColor = rgb(217, 119, 6);
        color = rgb(255, 255, 255, 0.8);
        status-mixin(bgColor, color)
    }
}